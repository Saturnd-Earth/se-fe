[{"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/index.js":"1","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/App.js":"2","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Login/Login.js":"3","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post.js":"4","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/SignUp/SignUp.js":"5","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header.js":"6","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Feed/Feed.js":"7","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post_Input.js":"8","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Top_Button.js":"9","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Bottom_Button.js":"10","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/requests.js":"11","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Post/Post.js":"12"},{"size":526,"mtime":1610044675913,"results":"13","hashOfConfig":"14"},{"size":2401,"mtime":1610053180999,"results":"15","hashOfConfig":"14"},{"size":790,"mtime":1610044675893,"results":"16","hashOfConfig":"14"},{"size":2003,"mtime":1610044675894,"results":"17","hashOfConfig":"14"},{"size":1203,"mtime":1610044675903,"results":"18","hashOfConfig":"14"},{"size":674,"mtime":1610044675892,"results":"19","hashOfConfig":"14"},{"size":2926,"mtime":1610053122412,"results":"20","hashOfConfig":"14"},{"size":1439,"mtime":1610044675894,"results":"21","hashOfConfig":"14"},{"size":1605,"mtime":1610044675893,"results":"22","hashOfConfig":"14"},{"size":1344,"mtime":1610044675892,"results":"23","hashOfConfig":"14"},{"size":3128,"mtime":1610044675914,"results":"24","hashOfConfig":"14"},{"size":4878,"mtime":1610053163338,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"qxqqdo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/index.js",[],["57","58"],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/App.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Login/Login.js",["59","60","61"],"import React, { Component } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { USER_LOGIN } from '../requests';\n\nfunction Login() {\n  let input = {\n    password: '',\n    username: ''\n  }\n  let history = useHistory();\n  let handleInput = (e) => {\n    input[e.target.name] = e.target.value\n  }\n\n  let login = (e) => {\n    e.preventDefault();\n    history.push('/')\n  }\n\n  return (\n    <section>\n      <form>\n        <input type=\"text\" placeholder=\"username\" name=\"username\" onInput={handleInput}/>\n        <input type=\"password\" placeholder=\"password\" name=\"password\" onInput={handleInput}/>\n        <input type=\"submit\" placeholder=\"register\" onClick={login} value=\"login\"/>\n      </form>\n    </section>\n  )\n}\n\nexport default Login;\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/SignUp/SignUp.js",["62"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useMutation } from '@apollo/client';\nimport { USER_SIGNUP } from '../requests';\n\nexport function SignUp() {\n  let [error, setError] = useState(false)\n  let input = {\n    password: '',\n    username: ''\n  }\n  let history = useHistory();\n  let [signUpUser, { data }] = useMutation(USER_SIGNUP);\n\n  let handleInput = (e) => {\n    input[e.target.name] = e.target.value\n  }\n\n  let signUp = (e) => {\n    let {username, password} = input\n    e.preventDefault()\n    signUpUser({\n      variables: {\n        username,\n        password\n      }\n    }).then( response => {\n      history.push('/')\n      console.log(response)\n    })\n    .catch( _ => {\n      setError(true)\n    })\n  }\n\n  return (\n    <section>\n      <form>\n        <input type=\"text\" placeholder=\"username\" name=\"username\" onInput={handleInput}/>\n        <input type=\"password\" placeholder=\"password\" name=\"password\" onInput={handleInput}/>\n        <input type=\"submit\" placeholder=\"register\" onClick={signUp} value=\"Sign up\"/>\n        {error ? 'Looks like that user already exists! Select a different user name' : <></>}\n      </form>\n    </section>\n  )\n}\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header.js",["63"],"import React from 'react';\nimport '../Scss/base.scss';\nimport HeaderBottomButton from './Header_Bottom_Button.js'\nimport HeaderTopButton from './Header_Top_Button.js'\n\n\nimport seLogo from '../images/se-logo.png';\n\n// import seLogo from '../images/se-logo.png'\nimport { NavLink } from 'react-router-dom';\n\nexport default function Header() {\n    return (\n        <section>\n            <section className='header-top'>\n                <img src={seLogo} alt='Saturn`d Earth Logo' id='se-logo'/>\n                <h1 className='header-text'>Saturn'd Earth</h1>\n                <HeaderTopButton/>\n            </section>\n            <HeaderBottomButton/>\n        </section>\n    )\n}\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Feed/Feed.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post_Input.js",["64","65"],"import React, { useState, useEffect } from 'react'\nimport '../Scss/base.scss';\n\nconst Make_Post_Input = (props) => {\n\n  if (props.commentInput === 3) {\n    return (\n      <section className='input-section'>\n        <textarea\n          rows=\"6\" cols=\"10\"\n          className='make-post-input tab-content'\n          placeholder='Add A Title To Your Video'\n          spellCheck= \"true\"\n          wrap=\"soft\"\n        />\n        <input\n          className='make-post-input media-content'\n          placeholder='input your video link!'\n          minlength='5'\n          type='url'\n        />\n      </section>\n    )\n  } else if (props.commentInput === 2) {\n    return (\n      <section className='input-section'>\n        <textarea\n          rows=\"6\" cols=\"10\"\n          className='make-post-input tab-content'\n          placeholder='Add A Title To Your Image'\n          spellCheck= \"true\"\n          wrap=\"soft\"\n        />\n        <input\n          className='make-post-input media-content'\n          placeholder='input your image link!'\n          minlength='5'\n          type='url'\n        />\n      </section>\n    )\n  } else {\n    return (\n      <section className='input-section'>\n        <textarea\n          rows=\"10\" cols=\"10\"\n          className='make-post-input tab-content'\n          placeholder='Type your post here!'\n          spellCheck= \"true\"\n          wrap=\"soft\"\n        />\n      </section>\n    )\n  }\n}\n\nexport default Make_Post_Input\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Top_Button.js",["66"],"import React, { useState, useEffect } from 'react'\nimport '../Scss/base.scss';\nimport { NavLink } from 'react-router-dom';\n\nimport login from '../images/login-white.png';\nimport logout from '../images/logout-white.png';\nimport signup from '../images/sign-up-blue.png';\n\nexport default function Header_Top_Button() {\n  const [logOn, setlogOn] = useState(false);\n\n  if (logOn === false) {\n    return (\n      <section className='header-top-buttons'> \n      <NavLink to='/signup' className='header-top-buttons'>\n      <button className='logon' onClick={() => setlogOn(true)}>\n          <img \n            src={signup} \n            alt='sign up button' \n            label='sign up button'\n            className='sign-up-button logon-icons'\n          />\n          Join\n        </button>\n      </NavLink>\n      <NavLink to='/login' className='header-top-buttons'>\n        <button className='logon' onClick={() => setlogOn(true)}>\n          <img \n            src={login}\n            alt='login button' \n            label='log in and out button'\n            className='sign-in-button logon-icons'\n          />\n          login \n        </button>\n      </NavLink>\n      </section>\n    )\n  } else {\n    return (\n      <section className='header-top-buttons logout-section' onClick={() => setlogOn(false)}> \n        <button className='logon' onClick={() => setlogOn(false)}>\n          <img \n            src={logout} \n            alt='login button' \n            label='log in and out button'\n            className='sign-in-button logon-icons'\n          />\n          logout \n        </button>\n      </section>\n    )\n  }\n}","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Bottom_Button.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/requests.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Post/Post.js",["67","68","69","70","71"],"import blueLike from '../images/like-blue.png';\nimport { CREATE_LIKE } from '../requests';\nimport defaultLike from '../images/like-white.png';\nimport React, { useState, useEffect }  from 'react';\nimport { useMutation } from '@apollo/client';\nimport '../Scss/base.scss';\n\nexport function Post(props) {\n    let [userInfo, setUserInfo] = useState({\n        userIcon: null,\n        name: null,\n        id: 10\n    })\n    let [postInfo, setPostInfo] = useState({\n        ring: 0,\n        id: 14,\n        date: null,\n        liked: false,\n        postContent: null,\n    })\n    let [page, setPage] = useState({\n        myPosts: true\n    })\n    let [loadingPos, setLoadingPos] = useState(false)\n    let [sendNewLike, { data }] = useMutation(CREATE_LIKE);\n\n    let like = async () => {\n        setLoadingPos(true)\n        window.navigator.geolocation.getCurrentPosition(\n          (pos) => {\n            console.log(userInfo.id,\n              postInfo.id,\n              pos.coords.latitude,\n              pos.coords.longitude\n          )\n            console.log(pos)\n            setLoadingPos(false)\n            setPostInfo({\n                ...postInfo,\n                liked: !postInfo.liked\n            })\n            sendNewLike({\n              variables: {\n                userId: userInfo.id,\n                postId: postInfo.id,\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude\n              }\n            })\n            .then( () => {\n\n            })\n            .catch( err => console.log('No one likes.' + err))\n          },\n          (err) => {\n            console.log('BAD GEOLOCATOR ' + err)\n          }\n      )\n      setTimeout( () => setLoadingPos(false), 16000)\n    }\n\n    let likeButton;\n    !postInfo.liked ? likeButton = defaultLike : likeButton = blueLike;\n    if (loadingPos) return (<h1>LOADING YOUR LOCATION....</h1>)\n    if (props.myPostsPage) {\n        return (\n            <section className='post'>\n                <section className='post-left'>\n                    <div className='post-left-top'>\n                        <img src={props.icon} alt='User Icon' id='user-icon'/>\n                    </div>\n                    <div className='post-left-bottom' style={{display: 'grid',\n                    gridTemplateRows: '1em 1em', paddingTop: '.5em'}}>\n                        <em style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}><h6  style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}>Lat: </h6></em>\n                        <em style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}><h6  style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}>{props.lat}</h6></em>\n                        <em style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}><h6  style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}>Lon: </h6></em>\n                        <em style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}><h6  style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}>{props.lon}</h6></em>\n                    </div>\n                </section>\n                <section className='post-right'>\n                    <div className='post-right-top'>\n                            <em><strong><h5 className='post-right-top-h' id='name-header'>Last liked in: </h5></strong></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt2'>Ring: {props.ring}</h6></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt3'>Date: {props.date}</h6></em>\n                    </div>\n                    <div className='post-right-bottom'>\n                        <p className='post-right-bottom-p'>{props.content}</p>\n                    </div>\n                </section>\n            </section>\n        )\n    } else {\n        return (\n            <section className='post'>\n                <section className='post-left'>\n                    <div className='post-left-top'>\n                        <img src={props.icon} alt='User Icon' id='user-icon'/>\n                    </div>\n                    <div className='post-left-bottom'>\n                        <img src={likeButton} alt='Like button' id='like-button' onClick={() => like()}/>\n                    </div>\n                </section>\n                <section className='post-right'>\n                    <div className='post-right-top'>\n                            <em><strong><h5 className='post-right-top-h' id='name-header'>{props.name}</h5></strong></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt2'>Ring: {props.ring}</h6></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt3'>Date: {props.date}</h6></em>\n                    </div>\n                    <div className='post-right-bottom'>\n                        <p className='post-right-bottom-p'>{props.content}</p>\n                    </div>\n                </section>\n            </section>\n        )\n    }\n}",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":18},{"ruleId":"76","severity":1,"message":"81","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":20},{"ruleId":"76","severity":1,"message":"82","line":13,"column":22,"nodeType":"78","messageId":"79","endLine":13,"endColumn":26},{"ruleId":"76","severity":1,"message":"83","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":17},{"ruleId":"76","severity":1,"message":"84","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"85","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"85","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"85","line":4,"column":27,"nodeType":"78","messageId":"79","endLine":4,"endColumn":36},{"ruleId":"76","severity":1,"message":"86","line":9,"column":20,"nodeType":"78","messageId":"79","endLine":9,"endColumn":31},{"ruleId":"76","severity":1,"message":"87","line":21,"column":10,"nodeType":"78","messageId":"79","endLine":21,"endColumn":14},{"ruleId":"76","severity":1,"message":"88","line":21,"column":16,"nodeType":"78","messageId":"79","endLine":21,"endColumn":23},{"ruleId":"76","severity":1,"message":"82","line":25,"column":25,"nodeType":"78","messageId":"79","endLine":25,"endColumn":29},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'USER_LOGIN' is defined but never used.","'data' is assigned a value but never used.","'NavLink' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setUserInfo' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]