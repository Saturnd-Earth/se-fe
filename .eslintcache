[{"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/index.js":"1","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/App.js":"2","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Login/Login.js":"3","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post.js":"4","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/SignUp/SignUp.js":"5","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header.js":"6","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Feed/Feed.js":"7","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post_Input.js":"8","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Top_Button.js":"9","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Bottom_Button.js":"10","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/requests.js":"11","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Post/Post.js":"12","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Your_Posts/Your_Posts.js":"13"},{"size":526,"mtime":1610162383283,"results":"14","hashOfConfig":"15"},{"size":1620,"mtime":1610222759323,"results":"16","hashOfConfig":"15"},{"size":790,"mtime":1610044675893,"results":"17","hashOfConfig":"15"},{"size":2003,"mtime":1610044675894,"results":"18","hashOfConfig":"15"},{"size":1203,"mtime":1610044675903,"results":"19","hashOfConfig":"15"},{"size":674,"mtime":1610044675892,"results":"20","hashOfConfig":"15"},{"size":2055,"mtime":1610219684667,"results":"21","hashOfConfig":"15"},{"size":1529,"mtime":1610057271087,"results":"22","hashOfConfig":"15"},{"size":1434,"mtime":1610219531116,"results":"23","hashOfConfig":"15"},{"size":1344,"mtime":1610044675892,"results":"24","hashOfConfig":"15"},{"size":3128,"mtime":1610044675914,"results":"25","hashOfConfig":"15"},{"size":4987,"mtime":1610162469817,"results":"26","hashOfConfig":"15"},{"size":868,"mtime":1610222764261,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"qxqqdo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/index.js",[],["62","63"],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/App.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Login/Login.js",["64","65","66"],"import React, { Component } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { USER_LOGIN } from '../requests';\n\nfunction Login() {\n  let input = {\n    password: '',\n    username: ''\n  }\n  let history = useHistory();\n  let handleInput = (e) => {\n    input[e.target.name] = e.target.value\n  }\n\n  let login = (e) => {\n    e.preventDefault();\n    history.push('/')\n  }\n\n  return (\n    <section>\n      <form>\n        <input type=\"text\" placeholder=\"username\" name=\"username\" onInput={handleInput}/>\n        <input type=\"password\" placeholder=\"password\" name=\"password\" onInput={handleInput}/>\n        <input type=\"submit\" placeholder=\"register\" onClick={login} value=\"login\"/>\n      </form>\n    </section>\n  )\n}\n\nexport default Login;\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/SignUp/SignUp.js",["67"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useMutation } from '@apollo/client';\nimport { USER_SIGNUP } from '../requests';\n\nexport function SignUp() {\n  let [error, setError] = useState(false)\n  let input = {\n    password: '',\n    username: ''\n  }\n  let history = useHistory();\n  let [signUpUser, { data }] = useMutation(USER_SIGNUP);\n\n  let handleInput = (e) => {\n    input[e.target.name] = e.target.value\n  }\n\n  let signUp = (e) => {\n    let {username, password} = input\n    e.preventDefault()\n    signUpUser({\n      variables: {\n        username,\n        password\n      }\n    }).then( response => {\n      history.push('/')\n      console.log(response)\n    })\n    .catch( _ => {\n      setError(true)\n    })\n  }\n\n  return (\n    <section>\n      <form>\n        <input type=\"text\" placeholder=\"username\" name=\"username\" onInput={handleInput}/>\n        <input type=\"password\" placeholder=\"password\" name=\"password\" onInput={handleInput}/>\n        <input type=\"submit\" placeholder=\"register\" onClick={signUp} value=\"Sign up\"/>\n        {error ? 'Looks like that user already exists! Select a different user name' : <></>}\n      </form>\n    </section>\n  )\n}\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header.js",["68"],"import React from 'react';\nimport '../Scss/base.scss';\nimport HeaderBottomButton from './Header_Bottom_Button.js'\nimport HeaderTopButton from './Header_Top_Button.js'\n\n\nimport seLogo from '../images/se-logo.png';\n\n// import seLogo from '../images/se-logo.png'\nimport { NavLink } from 'react-router-dom';\n\nexport default function Header() {\n    return (\n        <section>\n            <section className='header-top'>\n                <img src={seLogo} alt='Saturn`d Earth Logo' id='se-logo'/>\n                <h1 className='header-text'>Saturn'd Earth</h1>\n                <HeaderTopButton/>\n            </section>\n            <HeaderBottomButton/>\n        </section>\n    )\n}\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Feed/Feed.js",["69"],"import { GET_ALL_POSTS } from '../requests.js'\nimport React, { useState } from 'react';\nimport '../Scss/base.scss';\nimport { gql, useQuery } from '@apollo/client';\nimport { Post } from '../Post/Post.js';\nimport prev from '../images/prev-mixed.png'\nimport next from '../images/next-mixed.png'\n\n\nexport default function Feed(props) {\n    let [postIndex, setPostIndex] = useState(0)\n    let {loading, error, data } = useQuery(GET_ALL_POSTS);\n\n    if (loading) return <h1>LOADING POSTS...</h1>\n    if (error) return <h1>Hmm... something went wrong.</h1>\n\n    function addToIndex(num) {\n      let arrLength = data.posts.length\n      let total = num + postIndex\n      let index = ((total % arrLength) + arrLength) % arrLength\n      return index\n    }\n\n    let { content, createdAt, id, ringMinMax } = data.posts[postIndex]\n    let [min, max] = ringMinMax.slice(1, -1).split(', ').map( char => +char )\n\n    return (\n        <section className='feed'>\n            <h1 className='header-title'>{props.headerTitle}</h1>\n            <Post content={content} createdAt={createdAt} id={id} ring={[min, max]}/>\n            <section className=\"next-previous-section\">\n              <button \n                className='buttons'\n                id=\"previous-button\" \n                onClick={ () => setPostIndex( addToIndex( -1 )) }\n                >\n                <img\n                    src={prev}\n                    alt='previous arrow'\n                    label='previous arrow'\n                    className='logon-icons'\n                />\n                Previous\n                </button>\n                <button \n                className='buttons'\n                id=\"next-button\" \n                onClick={ () => setPostIndex( addToIndex( 1 )) }\n                >\n                Next\n                <img\n                    src={next}\n                    alt='previous arrow'\n                    label='previous arrow'\n                    className='logon-icons'\n                />\n              </button>\n            </section>\n        </section>\n    )\n}\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Make_Post/Make_Post_Input.js",["70","71"],"import React, { useState, useEffect } from 'react'\nimport '../Scss/base.scss';\n\nconst Make_Post_Input = (props) => {\n\n  if (props.commentInput === 3) {\n    return (\n      <section className='input-section' data-testid='make post input'>\n        <textarea\n          rows=\"6\" cols=\"10\"\n          className='make-post-input tab-content'\n          placeholder='Add A Title To Your Video'\n          spellCheck= \"true\"\n          wrap=\"soft\"\n        />\n        <input\n          className='make-post-input media-content'\n          placeholder='input your video link!'\n          minLength='5'\n          type='url'\n        />\n      </section>\n    )\n  } else if (props.commentInput === 2) {\n    return (\n      <section className='input-section' data-testid='make post input'>\n        <textarea\n          rows=\"6\" cols=\"10\"\n          className='make-post-input tab-content'\n          placeholder='Add A Title To Your Image'\n          spellCheck= \"true\"\n          wrap=\"soft\"\n        />\n        <input\n          className='make-post-input media-content'\n          placeholder='input your image link!'\n          minLength='5'\n          type='url'\n        />\n      </section>\n    )\n  } else {\n    return (\n      <section className='input-section' data-testid='make post input'>\n        <textarea\n          rows=\"10\" cols=\"10\"\n          className='make-post-input tab-content'\n          placeholder='Type your post here!'\n          spellCheck= \"true\"\n          wrap=\"soft\"\n        />\n      </section>\n    )\n  }\n}\n\nexport default Make_Post_Input\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Top_Button.js",["72"],"import React, { useState, useEffect } from 'react'\nimport '../Scss/base.scss';\nimport { NavLink } from 'react-router-dom';\n\nimport login from '../images/login-white.png';\nimport logout from '../images/logout-white.png';\nimport signup from '../images/sign-up-blue.png';\n\nexport default function Header_Top_Button() {\n  const [logOn, setlogOn] = useState(false);\n\n  if (logOn === false) {\n    return (\n      <section className='header-top-buttons'>\n      <NavLink to='/signup' className='header-top-buttons'>\n      <button className='logon'>\n          <img\n            src={signup}\n            alt='Sign up'\n            label='sign up button'\n            className='sign-up-button logon-icons'\n          />\n        </button>\n      </NavLink>\n      <NavLink to='/login' className='header-top-buttons'>\n        <button className='logon'>\n          <img\n            src={login}\n            alt='Log in'\n            label='log in and out button'\n            className='sign-in-button logon-icons'\n          />\n        </button>\n      </NavLink>\n      </section>\n    )\n  } else {\n    return (\n      <section className='header-top-buttons logout-section' onClick={() => setlogOn(false)}>\n        <button className='logon'>\n          <img\n            src={logout}\n            alt='Log out'\n            label='log in and out button'\n            className='sign-in-button logon-icons'\n          />\n        </button>\n      </section>\n    )\n  }\n}\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Header/Header_Bottom_Button.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/requests.js",[],"/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Post/Post.js",["73","74","75","76"],"import blueLike from '../images/like-blue.png';\nimport { CREATE_LIKE } from '../requests';\nimport dummyIcon from '../images/dummyIcon.png'\nimport defaultLike from '../images/like-white.png';\nimport React, { useState }  from 'react';\nimport { useMutation } from '@apollo/client';\nimport '../Scss/base.scss';\n\nexport function Post(props) {\n    let [userInfo, setUserInfo] = useState({\n        userIcon: dummyIcon,\n        name: null,\n        id: 10\n    })\n    let [postInfo, setPostInfo] = useState({\n        ring: props.ring,\n        id: props.id,\n        createdAt: props.createdAt,\n        liked: props.liked,\n        content: props.content,\n    })\n    let [page, setPage] = useState({\n        myPosts: true\n    })\n    let [loadingPos, setLoadingPos] = useState(false)\n    let [sendNewLike, { data }] = useMutation(CREATE_LIKE);\n\n    let like = async () => {\n        setLoadingPos(true)\n        window.navigator.geolocation.getCurrentPosition(\n          (pos) => {\n            console.log(userInfo.id,\n              postInfo.id,\n              pos.coords.latitude,\n              pos.coords.longitude\n          )\n            console.log(pos)\n            setLoadingPos(false)\n            setPostInfo({\n                ...postInfo,\n                liked: !postInfo.liked\n            })\n            sendNewLike({\n              variables: {\n                userId: userInfo.id,\n                postId: postInfo.id,\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude\n              }\n            })\n            .then( () => {\n\n            })\n            .catch( err => console.log('No one likes.' + err))\n          },\n          (err) => {\n            console.log('BAD GEOLOCATOR ' + err)\n          }\n      )\n      setTimeout( () => setLoadingPos(false), 16000)\n    }\n\n    let likeButton;\n    !postInfo.liked ? likeButton = defaultLike : likeButton = blueLike;\n    if (loadingPos) return (<h1>LOADING YOUR LOCATION....</h1>)\n    if (props.myPostsPage) {\n        return (\n            <section className='post'>\n                <section className='post-left'>\n                    <div className='post-left-top'>\n                        <img src={props.icon} alt='User Icon' id='user-icon'/>\n                    </div>\n                    <div className='post-left-bottom' style={{display: 'grid',\n                    gridTemplateRows: '1em 1em', paddingTop: '.5em'}}>\n                        <em style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}><h6  style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}>Lat: </h6></em>\n                        <em style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}><h6  style={{margin: 0, gridRowStart: 1, gridRowEnd: 1}}>{props.lat}</h6></em>\n                        <em style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}><h6  style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}>Lon: </h6></em>\n                        <em style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}><h6  style={{margin: 0, gridRowStart: 2, gridRowEnd: 2}}>{props.lon}</h6></em>\n                    </div>\n                </section>\n                <section className='post-right'>\n                    <div className='post-right-top'>\n                            <em><strong><h5 className='post-right-top-h' id='name-header'>Last liked in: {props.lastLike}</h5></strong></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt2'>Ring: {props.ring}</h6></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt3'>Date: {props.date}</h6></em>\n                    </div>\n                    <div className='post-right-bottom'>\n                        <p className='post-right-bottom-p'>{props.content}</p>\n                    </div>\n                </section>\n            </section>\n        )\n    } else {\n        return (\n            <section className='post'>\n                <section className='post-left'>\n                    <div className='post-left-top'>\n                        <img src={props.icon} alt='User Icon' id='user-icon'/>\n                    </div>\n                    <div className='post-left-bottom'>\n                        <img src={likeButton} alt='Like button' id='like-button' onClick={() => like()}/>\n                    </div>\n                </section>\n                <section className='post-right'>\n                    <div className='post-right-top'>\n                            <em><strong><h5 className='post-right-top-h' id='name-header'>{props.name}</h5></strong></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt2'>Ring: {props.ring[1]}</h6></em><br/>\n                            <em><h6 className='post-right-top-h' id='prt3'>Date: {props.createdAt}</h6></em>\n                    </div>\n                    <div className='post-right-bottom'>\n                        <p className='post-right-bottom-p'>{props.content}</p>\n                    </div>\n                </section>\n            </section>\n        )\n    }\n}\n","/Users/Christopher/Coding/Learning/Turing/mod4/schoolwork/se-fe/src/Your_Posts/Your_Posts.js",["77","78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":20},{"ruleId":"84","severity":1,"message":"90","line":13,"column":22,"nodeType":"86","messageId":"87","endLine":13,"endColumn":26},{"ruleId":"84","severity":1,"message":"91","line":10,"column":10,"nodeType":"86","messageId":"87","endLine":10,"endColumn":17},{"ruleId":"84","severity":1,"message":"92","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":13},{"ruleId":"84","severity":1,"message":"93","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"94","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"94","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"95","line":10,"column":20,"nodeType":"86","messageId":"87","endLine":10,"endColumn":31},{"ruleId":"84","severity":1,"message":"96","line":22,"column":10,"nodeType":"86","messageId":"87","endLine":22,"endColumn":14},{"ruleId":"84","severity":1,"message":"97","line":22,"column":16,"nodeType":"86","messageId":"87","endLine":22,"endColumn":23},{"ruleId":"84","severity":1,"message":"90","line":26,"column":25,"nodeType":"86","messageId":"87","endLine":26,"endColumn":29},{"ruleId":"84","severity":1,"message":"93","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":25},{"ruleId":"84","severity":1,"message":"92","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":13},{"ruleId":"84","severity":1,"message":"98","line":18,"column":51,"nodeType":"86","messageId":"87","endLine":18,"endColumn":61},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'USER_LOGIN' is defined but never used.","'data' is assigned a value but never used.","'NavLink' is defined but never used.","'gql' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setUserInfo' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'ringMinMax' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]